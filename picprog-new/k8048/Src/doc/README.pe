-------------------------------------------------------------------------------

 Copyright (C) 2005-2014 Darron Broad
 All rights reserved.
 
 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:
 
 1. Redistributions of source code must retain the above copyright
    notice, this list of conditions and the following disclaimer.
 
 2. Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.

 3. Neither the name `Darron Broad' nor the names of any contributors
    may be used to endorse or promote products derived from this
    software without specific prior written permission.
 
 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 POSSIBILITY OF SUCH DAMAGE.

-------------------------------------------------------------------------------

PIC32 Programming Executive
===========================

On dsPIC/PIC24 and PIC32 devices, Microchip provide a `programming executive'.

This software is loaded into the chip to speed up ICSP.

k8048 supports ICSP with the programming executive (PE) on the PIC32 but not
the dsPIC/PIC24 devices. Currently there are no plans to add PE support for the
dsPIC/PIC24.

By default, PIC32 PE mode is not enabled and a few steps must be completed to
activate this mode of operation (also see footnote).

1. rename your .k8048 config file with a temporary name.

 $ mv ~/.k8048 ~/.k8048-config

2. make a directory named .k8048 in your home dir.

 $ mkdir ~/.k8048

3. move the old config into the new directory, renaming it to `config'.

 $ mv ~/.k8048-config ~/.k8048/config

4. download and unzip the programming executive from Microchip, Eg. for the
   PIC32MX150F128B.

 $ cd ~/.k8048
 $ wget -q http://ww1.microchip.com/downloads/en/DeviceDoc/RIPE_11_000301.zip
 $ unzip RIPE_11_000301.zip
 
A file named RIPE_11_000301.hex will now exist in the .k8048 directory. When
we use k32, and it finds this file, it will automatically load it into the chip.

The following PE files are all that's required for the PIC32MX range of micros.

md5sum:
2662befb94584d40b905a9040a9ed2f4 RIPE_06_000201.hex
4cb8f6492b1234a45c92979a36d91587 RIPE_11_000301.hex
aea1a950b72471e54b82852b93105d6a RIPE_15_000502.hex

To test that the PE has been registered correctly, we can issue the id command,
and if the PE is found the filename is shown. If the filename is not
shown then something is wrong.

 $ k32 id
 [1D000000] [PROGRAM]  00008000 WORDS
 [1F80F220] [DEVICEID] 14D06053 PIC32MX150F128B
 [1FC00000] [BOOT]     00000300 WORDS
 [1FC00BF0] [DEVCFG3]  CFFFFFFF
 [1FC00BF4] [DEVCFG2]  FFF9FFD9
 [1FC00BF8] [DEVCFG1]  FC67CF59
 [1FC00BFC] [DEVCFG0]  7FFFFFFB
            [PE]       RIPE_11_000301.hex

The speed up when using the PIC32 PE to read and write to flash file is considerable.
For example, 128KB written without PE takes about 60 seconds on the R-PI, with the
PE it takes about 7.5 seconds. Reading the same data takes 2 minutes without the PE
and 5.5 seconds with it.

Note
----
Internally k8048 uses the directory of the current config file to locate the PE
hex file. This means that if you don't follow the procedure above and keep .k8048
as a file in your home directory, then k8048 will search in there.
