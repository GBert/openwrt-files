Velleman K8048 Programmer for FreeBSD and others.
-------------------------------------------------------------------------------

 Copyright (c) 2005-2013 Darron Broad
 All rights reserved.

Licensed under the terms of the BSD license, see file LICENSE for details.
-------------------------------------------------------------------------------

gputils
=======

$ cd /usr/src
$ wget http://downloads.sourceforge.net/project/gputils/gputils/1.2.0/gputils-1.2.0.tar.gz
$ tar zxvf gputils-1.2.0.tar.gz
$ cd gputils-1.2.0
$ apt-get install build-essential
$ ./configure --prefix=/usr/local --disable-html-doc
$ make
$ make install

sdcc
====

$ cd /usr/src
$ wget http://downloads.sourceforge.net/project/sdcc/sdcc/3.3.0/sdcc-src-3.3.0.tar.bz2
$ tar jxvf sdcc-src-3.3.0.tar.bz2
$ cd sdcc-3.3.0
$ apt-get install bison flex stx-btree-dev libgc-dev libboost-all-dev
$ ./configure --prefix=/usr/local --enable-libgc
$ make 
$ make install

sdcc for the R-PI using a raspbian emulator
===========================================

It is not possible to build sdcc natively on a raspberry pi model A due to
memory contraints but we may build it on a high powered machine using an
emulator.

A cross compiler would be faster than this emulator but is considerably more
time consuming to get up and running.

See: http://superpiadventures.com/2012/07/development-environment/

Install emulator on emulator host machine.

$ apt-get install qemu-user-static
$ apt-get install debootstrap
$ mkdir -p /embedded/raspbian/dev
$ mkdir -p /embedded/raspbian/proc
$ mkdir -p /embedded/raspbian/sys
$ qemu-debootstrap --no-check-gpg --arch armhf wheezy /embedded/raspbian http://archive.raspbian.org/raspbian

Enter emulator and initialise.

$ mount -o bind /dev /embedded/raspbian/dev
$ mount -t proc proc /embedded/raspbian/proc
$ mount -t sysfs sysfs /embedded/raspbian/sys
$ setenv QEMU_CPU arm1176
$ chroot /embedded/raspbian /bin/bash
$ echo "deb http://archive.raspbian.org/raspbian/ wheezy main contrib non-free rpi" > /etc/apt/sources.list
$ wget http://archive.raspbian.org/raspbian.public.key -O - | apt-key add -
$ apt-get update
$ apt-get install locales
$ dpkg-reconfigure locales 

Compile gputils in the emulator and install, afterwards compile sdcc and copy
both builds for installation on the target machine.
