-- Title: Character Library
-- Author: Matthew Schinkel - borntechi.com, copyright (c) 2009, all rights reserved.
-- Adapted-by:
-- Compiler: >=2.4k
-- Revision: $Revision: 2760 $
--
-- This file is part of jallib (http://jallib.googlecode.com)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description: Library for managing characters.
--
-- Sources:
--

--------------------------------------------------------------------------------
-- convert one integer (0 to 9) to an ascii character
--------------------------------------------------------------------------------
procedure char_int_to_ascii(byte in out num) is
   pragma inline
   num = num + 48
end procedure

--------------------------------------------------------------------------------
-- check if a character is upper case
--------------------------------------------------------------------------------
function char_is_upper(byte in char) return bit is
   pragma inline

   if (char > 0x40) & (char < 0x5B) then
      return 1
   else
      return 0
   end if
end function

--------------------------------------------------------------------------------
-- check if a character is lower case
--------------------------------------------------------------------------------
function char_is_lower(byte in char) return bit is
   pragma inline

   if (char > 0x60) & (char < 0x7B) then
      return 1
   else
      return 0
   end if
end function

--------------------------------------------------------------------------------
-- check if a character is a number
--------------------------------------------------------------------------------
function char_is_digit(byte in char) return bit is
   pragma inline

   if (char > 0x30) & (char < 0x3A) then
      return 1
   else
      return 0
   end if
end function

--------------------------------------------------------------------------------
-- check if a character is a letter
--------------------------------------------------------------------------------
function char_is_letter(byte in char) return bit is
   pragma inline

   if char_is_upper(char) | char_is_lower(char) then
      return 1
   else
      return 0
   end if
end function

--------------------------------------------------------------------------------
-- convert a lower case character to upper case
--------------------------------------------------------------------------------
procedure char_upper(byte in out char) is
   pragma inline
   if char_is_lower(char) then
      char = char - 0x20
   end if
end procedure

--------------------------------------------------------------------------------
-- convert a upper case character to lower case
--------------------------------------------------------------------------------
procedure char_lower(byte in out char) is
   pragma inline
   if char_is_upper(char) then
      char = char + 0x20
   end if
end procedure

--------------------------------------------------------------------------------
-- check if two characters are the same (not case dependant)
--------------------------------------------------------------------------------
function char_compare(byte in char1, byte in char2) return bit is
   char_lower(char1)
   char_lower(char2)

   if char1 == char2 then
      return 1
   else
      return 0
   end if

end function

--------------------------------------------------------------------------------
-- check if is a printable character
--------------------------------------------------------------------------------
function char_is_printable(byte in char) return bit is
   pragma inline
   if (char > 0x20) & (char < 0x7F) then
      return 1
   end if

   return 0
end function

